rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
View(indore_counts)
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
raw_data1 = raw_data1 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data2 = raw_data2 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data3 = raw_data3 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status, Num.Cases)
indore_raw_data1 = raw_data1[raw_data1$Detected.District == 'Indore',]
#indore_raw_data1 = indore_raw_data1[indore_raw_data1$Current.Status == 'Hospitalized',]
indore_raw_data2 = raw_data2[raw_data2$Detected.District == 'Indore',]
#indore_raw_data2 = indore_raw_data2[indore_raw_data2$Current.Status == 'Hospitalized',]
indore_raw_data3 = raw_data3[raw_data3$Detected.District == 'Indore',]
#indore_raw_data3 = indore_raw_data3[indore_raw_data3$Current.Status == 'Hospitalized',]
indore_raw_data1$Num.Cases = 1
indore_raw_data2$Num.Cases = 1
date_wise_num_cases1 = aggregate(indore_raw_data1$Num.Cases, by=list(Category=indore_raw_data1$Date.Announced), FUN=sum)
date_wise_num_cases2 = aggregate(indore_raw_data2$Num.Cases, by=list(Category=indore_raw_data2$Date.Announced), FUN=sum)
date_wise_num_cases3 = aggregate(indore_raw_data3$Num.Cases, by=list(Category=indore_raw_data3$Date.Announced), FUN=sum)
rm('indore_raw_data1', 'indore_raw_data2', 'indore_raw_data3')
indore_counts = rbind(date_wise_num_cases1, date_wise_num_cases2, date_wise_num_cases3)
rm('date_wise_num_cases1', 'date_wise_num_cases2', 'date_wise_num_cases3')
colnames(indore_counts) = c('Date', 'Counts')
indore_counts$Date = as.character.Date(indore_counts$Date, tryFormats = '%d/%m/%Y')
indore_counts$Date = as.Date(indore_counts$Date, format = '%d/%m/%Y')
indore_counts = indore_counts[order(indore_counts$Date),]
all_dates = seq.POSIXt(from = as.POSIXct(indore_counts$Date[1]), to = as.POSIXct(tail(indore_counts$Date, n = 1)), by = "1 days")
all_dates = as.Date(all_dates, format = '%Y/%m/%d')
all_dates = data.frame(all_dates)
colnames(all_dates) = c('Date')
indore_counts = merge(indore_counts, all_dates, by = 'Date', all.y = TRUE)
indore_counts[is.na(indore_counts)] = 0
rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
library(EpiEstim)
R_estimate <- estimate_R(indore_counts$Counts,  method='parametric_si', config=list(t_start=2:42,
t_end=5:45, n1 = 500, mean_si = 3.96, std_si = 4.75,
n2 = 100, seed = 1, mcmc_control=list(init.pars=NULL,
burnin=10000, thin=1000, seed=1)))
plot(R_estimate)
View(indore_counts)
View(indore_counts)
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
raw_data1 = raw_data1 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data2 = raw_data2 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data3 = raw_data3 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status, Num.Cases)
indore_raw_data1 = raw_data1[raw_data1$Detected.District == 'Indore',]
#indore_raw_data1 = indore_raw_data1[indore_raw_data1$Current.Status == 'Hospitalized',]
indore_raw_data2 = raw_data2[raw_data2$Detected.District == 'Indore',]
#indore_raw_data2 = indore_raw_data2[indore_raw_data2$Current.Status == 'Hospitalized',]
indore_raw_data3 = raw_data3[raw_data3$Detected.District == 'Indore',]
#indore_raw_data3 = indore_raw_data3[indore_raw_data3$Current.Status == 'Hospitalized',]
indore_raw_data1$Num.Cases = 1
indore_raw_data2$Num.Cases = 1
date_wise_num_cases1 = aggregate(indore_raw_data1$Num.Cases, by=list(Category=indore_raw_data1$Date.Announced), FUN=sum)
date_wise_num_cases2 = aggregate(indore_raw_data2$Num.Cases, by=list(Category=indore_raw_data2$Date.Announced), FUN=sum)
date_wise_num_cases3 = aggregate(indore_raw_data3$Num.Cases, by=list(Category=indore_raw_data3$Date.Announced), FUN=sum)
rm('indore_raw_data1', 'indore_raw_data2', 'indore_raw_data3')
indore_counts = rbind(date_wise_num_cases1, date_wise_num_cases2, date_wise_num_cases3)
rm('date_wise_num_cases1', 'date_wise_num_cases2', 'date_wise_num_cases3')
colnames(indore_counts) = c('Date', 'Counts')
indore_counts$Date = as.character.Date(indore_counts$Date, tryFormats = '%d/%m/%Y')
indore_counts$Date = as.Date(indore_counts$Date, format = '%d/%m/%Y')
indore_counts = indore_counts[order(indore_counts$Date),]
all_dates = seq.POSIXt(from = as.POSIXct(indore_counts$Date[1]), to = as.POSIXct(tail(indore_counts$Date, n = 1)), by = "1 days")
all_dates = as.Date(all_dates, format = '%Y/%m/%d')
all_dates = data.frame(all_dates)
colnames(all_dates) = c('Date')
indore_counts = merge(indore_counts, all_dates, by = 'Date', all.y = TRUE)
indore_counts[is.na(indore_counts)] = 0
rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
library(EpiEstim)
R_estimate <- estimate_R(indore_counts$Counts,  method='parametric_si', config=list(t_start=2:42,
t_end=5:45, n1 = 500, mean_si = 3.96, std_si = 4.75,
n2 = 100, seed = 1, mcmc_control=list(init.pars=NULL,
burnin=10000, thin=1000, seed=1)))
png(paste(path, 'plot.png'))
plot(R_estimate)
dev.off()
help("pdf")
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
raw_data1 = raw_data1 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data2 = raw_data2 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data3 = raw_data3 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status, Num.Cases)
indore_raw_data1 = raw_data1[raw_data1$Detected.District == 'Indore',]
#indore_raw_data1 = indore_raw_data1[indore_raw_data1$Current.Status == 'Hospitalized',]
indore_raw_data2 = raw_data2[raw_data2$Detected.District == 'Indore',]
#indore_raw_data2 = indore_raw_data2[indore_raw_data2$Current.Status == 'Hospitalized',]
indore_raw_data3 = raw_data3[raw_data3$Detected.District == 'Indore',]
#indore_raw_data3 = indore_raw_data3[indore_raw_data3$Current.Status == 'Hospitalized',]
indore_raw_data1$Num.Cases = 1
indore_raw_data2$Num.Cases = 1
date_wise_num_cases1 = aggregate(indore_raw_data1$Num.Cases, by=list(Category=indore_raw_data1$Date.Announced), FUN=sum)
date_wise_num_cases2 = aggregate(indore_raw_data2$Num.Cases, by=list(Category=indore_raw_data2$Date.Announced), FUN=sum)
date_wise_num_cases3 = aggregate(indore_raw_data3$Num.Cases, by=list(Category=indore_raw_data3$Date.Announced), FUN=sum)
rm('indore_raw_data1', 'indore_raw_data2', 'indore_raw_data3')
indore_counts = rbind(date_wise_num_cases1, date_wise_num_cases2, date_wise_num_cases3)
rm('date_wise_num_cases1', 'date_wise_num_cases2', 'date_wise_num_cases3')
colnames(indore_counts) = c('Date', 'Counts')
indore_counts$Date = as.character.Date(indore_counts$Date, tryFormats = '%d/%m/%Y')
indore_counts$Date = as.Date(indore_counts$Date, format = '%d/%m/%Y')
indore_counts = indore_counts[order(indore_counts$Date),]
all_dates = seq.POSIXt(from = as.POSIXct(indore_counts$Date[1]), to = as.POSIXct(tail(indore_counts$Date, n = 1)), by = "1 days")
all_dates = as.Date(all_dates, format = '%Y/%m/%d')
all_dates = data.frame(all_dates)
colnames(all_dates) = c('Date')
indore_counts = merge(indore_counts, all_dates, by = 'Date', all.y = TRUE)
indore_counts[is.na(indore_counts)] = 0
rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
library(EpiEstim)
R_estimate <- estimate_R(indore_counts$Counts,  method='parametric_si', config=list(t_start=2:42,
t_end=5:45, n1 = 500, mean_si = 3.96, std_si = 4.75,
n2 = 100, seed = 1, mcmc_control=list(init.pars=NULL,
burnin=10000, thin=1000, seed=1)))
pdf(paste(path, 'plot.pdf'))
plot(R_estimate)
dev.off()
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
raw_data1 = raw_data1 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data2 = raw_data2 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data3 = raw_data3 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status, Num.Cases)
indore_raw_data1 = raw_data1[raw_data1$Detected.District == 'Indore',]
#indore_raw_data1 = indore_raw_data1[indore_raw_data1$Current.Status == 'Hospitalized',]
indore_raw_data2 = raw_data2[raw_data2$Detected.District == 'Indore',]
#indore_raw_data2 = indore_raw_data2[indore_raw_data2$Current.Status == 'Hospitalized',]
indore_raw_data3 = raw_data3[raw_data3$Detected.District == 'Indore',]
#indore_raw_data3 = indore_raw_data3[indore_raw_data3$Current.Status == 'Hospitalized',]
indore_raw_data1$Num.Cases = 1
indore_raw_data2$Num.Cases = 1
date_wise_num_cases1 = aggregate(indore_raw_data1$Num.Cases, by=list(Category=indore_raw_data1$Date.Announced), FUN=sum)
date_wise_num_cases2 = aggregate(indore_raw_data2$Num.Cases, by=list(Category=indore_raw_data2$Date.Announced), FUN=sum)
date_wise_num_cases3 = aggregate(indore_raw_data3$Num.Cases, by=list(Category=indore_raw_data3$Date.Announced), FUN=sum)
rm('indore_raw_data1', 'indore_raw_data2', 'indore_raw_data3')
indore_counts = rbind(date_wise_num_cases1, date_wise_num_cases2, date_wise_num_cases3)
rm('date_wise_num_cases1', 'date_wise_num_cases2', 'date_wise_num_cases3')
colnames(indore_counts) = c('Date', 'Counts')
indore_counts$Date = as.character.Date(indore_counts$Date, tryFormats = '%d/%m/%Y')
indore_counts$Date = as.Date(indore_counts$Date, format = '%d/%m/%Y')
indore_counts = indore_counts[order(indore_counts$Date),]
all_dates = seq.POSIXt(from = as.POSIXct(indore_counts$Date[1]), to = as.POSIXct(tail(indore_counts$Date, n = 1)), by = "1 days")
all_dates = as.Date(all_dates, format = '%Y/%m/%d')
all_dates = data.frame(all_dates)
colnames(all_dates) = c('Date')
indore_counts = merge(indore_counts, all_dates, by = 'Date', all.y = TRUE)
indore_counts[is.na(indore_counts)] = 0
rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
library(EpiEstim)
R_estimate <- estimate_R(indore_counts$Counts,  method='parametric_si', config=list(t_start=2:42,
t_end=5:45, n1 = 500, mean_si = 3.96, std_si = 4.75,
n2 = 100, seed = 1, mcmc_control=list(init.pars=NULL,
burnin=10000, thin=1000, seed=1)))
pdf(paste(path, 'plot.pdf'))
plot(R_estimate)
dev.off()
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
raw_data1 = raw_data1 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data2 = raw_data2 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data3 = raw_data3 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status, Num.Cases)
indore_raw_data1 = raw_data1[raw_data1$Detected.District == 'Indore',]
#indore_raw_data1 = indore_raw_data1[indore_raw_data1$Current.Status == 'Hospitalized',]
indore_raw_data2 = raw_data2[raw_data2$Detected.District == 'Indore',]
#indore_raw_data2 = indore_raw_data2[indore_raw_data2$Current.Status == 'Hospitalized',]
indore_raw_data3 = raw_data3[raw_data3$Detected.District == 'Indore',]
#indore_raw_data3 = indore_raw_data3[indore_raw_data3$Current.Status == 'Hospitalized',]
indore_raw_data1$Num.Cases = 1
indore_raw_data2$Num.Cases = 1
date_wise_num_cases1 = aggregate(indore_raw_data1$Num.Cases, by=list(Category=indore_raw_data1$Date.Announced), FUN=sum)
date_wise_num_cases2 = aggregate(indore_raw_data2$Num.Cases, by=list(Category=indore_raw_data2$Date.Announced), FUN=sum)
date_wise_num_cases3 = aggregate(indore_raw_data3$Num.Cases, by=list(Category=indore_raw_data3$Date.Announced), FUN=sum)
rm('indore_raw_data1', 'indore_raw_data2', 'indore_raw_data3')
indore_counts = rbind(date_wise_num_cases1, date_wise_num_cases2, date_wise_num_cases3)
rm('date_wise_num_cases1', 'date_wise_num_cases2', 'date_wise_num_cases3')
colnames(indore_counts) = c('Date', 'Counts')
indore_counts$Date = as.character.Date(indore_counts$Date, tryFormats = '%d/%m/%Y')
indore_counts$Date = as.Date(indore_counts$Date, format = '%d/%m/%Y')
indore_counts = indore_counts[order(indore_counts$Date),]
all_dates = seq.POSIXt(from = as.POSIXct(indore_counts$Date[1]), to = as.POSIXct(tail(indore_counts$Date, n = 1)), by = "1 days")
all_dates = as.Date(all_dates, format = '%Y/%m/%d')
all_dates = data.frame(all_dates)
colnames(all_dates) = c('Date')
indore_counts = merge(indore_counts, all_dates, by = 'Date', all.y = TRUE)
indore_counts[is.na(indore_counts)] = 0
rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
library(EpiEstim)
R_estimate <- estimate_R(indore_counts$Counts,  method='parametric_si', config=list(t_start=2:42,
t_end=5:45, n1 = 500, mean_si = 3.96, std_si = 4.75,
n2 = 100, seed = 1, mcmc_control=list(init.pars=NULL,
burnin=10000, thin=1000, seed=1)))
pdf(paste(path, 'plot.pdf'))
plot(R_estimate)
dev.off()
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
raw_data1 = raw_data1 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data2 = raw_data2 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data3 = raw_data3 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status, Num.Cases)
indore_raw_data1 = raw_data1[raw_data1$Detected.District == 'Indore',]
#indore_raw_data1 = indore_raw_data1[indore_raw_data1$Current.Status == 'Hospitalized',]
indore_raw_data2 = raw_data2[raw_data2$Detected.District == 'Indore',]
#indore_raw_data2 = indore_raw_data2[indore_raw_data2$Current.Status == 'Hospitalized',]
indore_raw_data3 = raw_data3[raw_data3$Detected.District == 'Indore',]
#indore_raw_data3 = indore_raw_data3[indore_raw_data3$Current.Status == 'Hospitalized',]
indore_raw_data1$Num.Cases = 1
indore_raw_data2$Num.Cases = 1
date_wise_num_cases1 = aggregate(indore_raw_data1$Num.Cases, by=list(Category=indore_raw_data1$Date.Announced), FUN=sum)
date_wise_num_cases2 = aggregate(indore_raw_data2$Num.Cases, by=list(Category=indore_raw_data2$Date.Announced), FUN=sum)
date_wise_num_cases3 = aggregate(indore_raw_data3$Num.Cases, by=list(Category=indore_raw_data3$Date.Announced), FUN=sum)
rm('indore_raw_data1', 'indore_raw_data2', 'indore_raw_data3')
indore_counts = rbind(date_wise_num_cases1, date_wise_num_cases2, date_wise_num_cases3)
rm('date_wise_num_cases1', 'date_wise_num_cases2', 'date_wise_num_cases3')
colnames(indore_counts) = c('Date', 'Counts')
indore_counts$Date = as.character.Date(indore_counts$Date, tryFormats = '%d/%m/%Y')
indore_counts$Date = as.Date(indore_counts$Date, format = '%d/%m/%Y')
indore_counts = indore_counts[order(indore_counts$Date),]
all_dates = seq.POSIXt(from = as.POSIXct(indore_counts$Date[1]), to = as.POSIXct(tail(indore_counts$Date, n = 1)), by = "1 days")
all_dates = as.Date(all_dates, format = '%Y/%m/%d')
all_dates = data.frame(all_dates)
colnames(all_dates) = c('Date')
indore_counts = merge(indore_counts, all_dates, by = 'Date', all.y = TRUE)
indore_counts[is.na(indore_counts)] = 0
rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
library(EpiEstim)
R_estimate <- estimate_R(indore_counts$Counts,  method='parametric_si', config=list(t_start=2:42,
t_end=5:45, n1 = 500, mean_si = 3.96, std_si = 4.75,
n2 = 100, seed = 1, mcmc_control=list(init.pars=NULL,
burnin=10000, thin=500, seed=1)))
pdf(paste(path, 'plot.pdf'))
plot(R_estimate)
dev.off()
plot(R_estimate)
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
raw_data1 = raw_data1 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data2 = raw_data2 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data3 = raw_data3 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status, Num.Cases)
indore_raw_data1 = raw_data1[raw_data1$Detected.District == 'Indore',]
#indore_raw_data1 = indore_raw_data1[indore_raw_data1$Current.Status == 'Hospitalized',]
indore_raw_data2 = raw_data2[raw_data2$Detected.District == 'Indore',]
#indore_raw_data2 = indore_raw_data2[indore_raw_data2$Current.Status == 'Hospitalized',]
indore_raw_data3 = raw_data3[raw_data3$Detected.District == 'Indore',]
#indore_raw_data3 = indore_raw_data3[indore_raw_data3$Current.Status == 'Hospitalized',]
indore_raw_data1$Num.Cases = 1
indore_raw_data2$Num.Cases = 1
date_wise_num_cases1 = aggregate(indore_raw_data1$Num.Cases, by=list(Category=indore_raw_data1$Date.Announced), FUN=sum)
date_wise_num_cases2 = aggregate(indore_raw_data2$Num.Cases, by=list(Category=indore_raw_data2$Date.Announced), FUN=sum)
date_wise_num_cases3 = aggregate(indore_raw_data3$Num.Cases, by=list(Category=indore_raw_data3$Date.Announced), FUN=sum)
rm('indore_raw_data1', 'indore_raw_data2', 'indore_raw_data3')
indore_counts = rbind(date_wise_num_cases1, date_wise_num_cases2, date_wise_num_cases3)
rm('date_wise_num_cases1', 'date_wise_num_cases2', 'date_wise_num_cases3')
colnames(indore_counts) = c('Date', 'Counts')
indore_counts$Date = as.character.Date(indore_counts$Date, tryFormats = '%d/%m/%Y')
indore_counts$Date = as.Date(indore_counts$Date, format = '%d/%m/%Y')
indore_counts = indore_counts[order(indore_counts$Date),]
all_dates = seq.POSIXt(from = as.POSIXct(indore_counts$Date[1]), to = as.POSIXct(tail(indore_counts$Date, n = 1)), by = "1 days")
all_dates = as.Date(all_dates, format = '%Y/%m/%d')
all_dates = data.frame(all_dates)
colnames(all_dates) = c('Date')
indore_counts = merge(indore_counts, all_dates, by = 'Date', all.y = TRUE)
indore_counts[is.na(indore_counts)] = 0
rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
library(EpiEstim)
R_estimate <- estimate_R(indore_counts$Counts,  method='parametric_si', config=list(t_start=2:42,
t_end=5:45, n1 = 500, mean_si = 3.96, std_si = 4.75,
n2 = 100, seed = 1, mcmc_control=list(init.pars=NULL,
burnin=10000, thin=500, seed=1)))
pdf(paste(path, 'plot.pdf'))
plot(R_estimate)
dev.off()
plot(R_estimate)
save.image("R_Indore.rda")
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
raw_data1 = raw_data1 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data2 = raw_data2 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status)
raw_data3 = raw_data3 %>% select(Date.Announced, Detected.District, Detected.State, Current.Status, Num.Cases)
indore_raw_data1 = raw_data1[raw_data1$Detected.District == 'Indore',]
#indore_raw_data1 = indore_raw_data1[indore_raw_data1$Current.Status == 'Hospitalized',]
indore_raw_data2 = raw_data2[raw_data2$Detected.District == 'Indore',]
#indore_raw_data2 = indore_raw_data2[indore_raw_data2$Current.Status == 'Hospitalized',]
indore_raw_data3 = raw_data3[raw_data3$Detected.District == 'Indore',]
#indore_raw_data3 = indore_raw_data3[indore_raw_data3$Current.Status == 'Hospitalized',]
indore_raw_data1$Num.Cases = 1
indore_raw_data2$Num.Cases = 1
date_wise_num_cases1 = aggregate(indore_raw_data1$Num.Cases, by=list(Category=indore_raw_data1$Date.Announced), FUN=sum)
date_wise_num_cases2 = aggregate(indore_raw_data2$Num.Cases, by=list(Category=indore_raw_data2$Date.Announced), FUN=sum)
date_wise_num_cases3 = aggregate(indore_raw_data3$Num.Cases, by=list(Category=indore_raw_data3$Date.Announced), FUN=sum)
rm('indore_raw_data1', 'indore_raw_data2', 'indore_raw_data3')
indore_counts = rbind(date_wise_num_cases1, date_wise_num_cases2, date_wise_num_cases3)
rm('date_wise_num_cases1', 'date_wise_num_cases2', 'date_wise_num_cases3')
colnames(indore_counts) = c('Date', 'Counts')
indore_counts$Date = as.character.Date(indore_counts$Date, tryFormats = '%d/%m/%Y')
indore_counts$Date = as.Date(indore_counts$Date, format = '%d/%m/%Y')
indore_counts = indore_counts[order(indore_counts$Date),]
all_dates = seq.POSIXt(from = as.POSIXct(indore_counts$Date[1]), to = as.POSIXct(tail(indore_counts$Date, n = 1)), by = "1 days")
all_dates = as.Date(all_dates, format = '%Y/%m/%d')
all_dates = data.frame(all_dates)
colnames(all_dates) = c('Date')
indore_counts = merge(indore_counts, all_dates, by = 'Date', all.y = TRUE)
indore_counts[is.na(indore_counts)] = 0
rm('raw_data1', 'raw_data2', 'raw_data3', 'all_dates')
indore_counts$Cumulative.Counts = cumsum(indore_counts$Counts)
library(EpiEstim)
R_estimate <- estimate_R(indore_counts$Counts,  method='parametric_si', config=list(t_start=2:42,
t_end=5:45, n1 = 500, mean_si = 3.96, std_si = 4.75,
n2 = 100, seed = 1, mcmc_control=list(init.pars=NULL,
burnin=10000, thin=500, seed=1)))
pdf(paste(path, 'plot.pdf'))
plot(R_estimate)
dev.off()
plot(R_estimate)
save.image(paste(path, 'R_Indore.rda'))
View(R_estimate)
R_estimate$R
library(dplyr)
path = 'C:/Users/maity/OneDrive/Documents/covid/'
raw_data1 = read.csv(file = paste(path, 'raw_data1.csv', sep = ''))
raw_data2 = read.csv(file = paste(path, 'raw_data2.csv', sep = ''))
raw_data3 = read.csv(file = paste(path, 'raw_data3.csv', sep = ''))
View(raw_data1)
View(raw_data3)
View(indore_counts)
library(fdapace)
setwd('C:/Users/maity/OneDrive/Documents/covid/')
load('Odisha All Results.rda')
no_of_districts = length(Districts)
number_of_days = rep(0, no_of_districts)
for (i in 1:no_of_districts)
{
number_of_days[i] = length(R.Curve[[i]]$date.R)
}
min_number_of_days = min(number_of_days)
number_of_days
mean_R = list()
time_R = list()
for (i in 1:no_of_districts)
{
n = number_of_days[i]
mean_R[[i]] <- R.Curve[[i]]$mean.R[(n-min_number_of_days+1):n]
time_R[[i]] <- R.Curve[[i]]$date.R[(n-min_number_of_days+1):n]
}
time_R
# Look at https://cran.r-project.org/web/packages/fdapace/fdapace.pdf for further refs
opts = list(maxK = 4)
functional_pca = FPCA(mean_R, time_R, optns = opts)
png('fpca_diagnosis.png')
plot(functional_pca)
dev.off()
pca = data.frame('pca1' = functional_pca$xiEst[, 1], 'pca2' = functional_pca$xiEst[,2])
pca$Name.of.the.District = names(R.Curve)
# Look at https://cran.r-project.org/web/packages/fdapace/fdapace.pdf for further refs
opts = list(maxK = 4)
functional_pca = FPCA(mean_R, time_R, optns = opts)
png('fpca_diagnosis.png')
plot(functional_pca)
dev.off()
pca = data.frame('pca1' = functional_pca$xiEst[, 1], 'pca2' = functional_pca$xiEst[,2])
pca$Name.of.the.District = names(R.Curve)
# Load covariates
Odisha_covar <- read.csv('Covariates.csv')
Odisha_covar$Name.of.the.District[1] <- 'Angul'
Odisha_covar$Name.of.the.District[29] <- 'Subarnapur'
Odisha_covar$Name.of.the.District[13] <- 'Jajpur'
Data = merge(pca, Odisha_covar, by = 'Name.of.the.District', all = TRUE)
## Regressions
library(glmnet)
# Lasso
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda = 1)
r2 = glmnet(as.matrix(Data[,5:33]), Data$pca2, alpha = 1, lambda = 2)
# Multiple linear regression
X = Data[, 5:33]
r = lm(Data$pca1 ~ ., data = X)
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1)
plot(r1,xvar="lambda",label=TRUE)
help("glmnet")
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1)
plot(r1,xvar="lambda",label=TRUE)
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda =seq(0.01, 2, by = 0.05))
plot(r1,xvar="lambda",label=TRUE)
help("glmnet")
help(plot)
help("glmnet")
help(plot.glmnet)
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda =seq(0.01, 2, by = 0.05))
plot(r1,xvar="lambda",label=TRUE)
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda =e^seq(-2, 2, by = 0.01))
plot(r1,xvar="lambda",label=TRUE)
e
exp()
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda =exp(seq(-2, 2, by = 0.01)))
plot(r1,xvar="lambda",label=TRUE)
colnames(Data)
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda =exp(seq(-2.5, 0.5, by = 0.01)))
plot(r1,xvar="lambda",label=TRUE)
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda =exp(seq(-2.2, 0.5, by = 0.01)))
plot(r1,xvar="lambda",label=TRUE)
install.packages('plotmo')
plot_glmnet(r1)
library(plotmo) #
plot_glmnet(r1)
r2 = glmnet(as.matrix(Data[,5:33]), Data$pca2, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r2)
# Lasso
par(mfrow=c(2,1))
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r1, title = 'Trace plot for 1st PC')
r2 = glmnet(as.matrix(Data[,5:33]), Data$pca2, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r2, title = 'Trace plot for 2nd PC')
png('trace-plots.png')
par(mfrow=c(2,1))
r1 = glmnet(as.matrix(Data[,5:33]), Data$pca1, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r1, title = 'Trace plot for 1st PC')
r2 = glmnet(as.matrix(Data[,5:33]), Data$pca2, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r2, title = 'Trace plot for 2nd PC')
dev.off()
colnames(Data)
selected_vars = cbind.data.frame(Data$SUB.DIVISIONAL.hospital.per.10k, Data$Total.Beds.Capacity.per.10k,
Data$Total.ICU.Beds.per.10K, Data$PHC.s.CHC.s.per.10k)
colnames(selected_vars) = c('SubDiv_hospital_per_10K', 'Total_bed_per_10K', 'Total_ICU_per_10K', 'PHC_CHC_per_10K')
normalize = function(x){
return (x - mean(x))/sd(x)
}
std_vars = apply(selected_vars, 2, normalize)
std_vars = data.frame(std_vars)
normalize = function(x){
return (x - mean(x))/sd(x)
}
std_vars = apply(Data[, 5:33], 2, normalize)
std_vars = data.frame(std_vars)
r1 = glmnet(as.matrix(std_vars), Data$pca1, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r1, title = 'Trace plot for 1st PC')
r2 = glmnet(as.matrix(std_vars), Data$pca2, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r2, title = 'Trace plot for 2nd PC')
r1 = glmnet(as.matrix(std_vars), Data$pca1, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r1, title = 'Trace plot for 1st PC')
r2 = glmnet(as.matrix(std_vars), Data$pca2, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r2, title = 'Trace plot for 2nd PC')
png('trace-plots.png')
par(mfrow=c(2,1))
r1 = glmnet(as.matrix(std_vars), Data$pca1, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r1, title = 'Trace plot for 1st PC')
r2 = glmnet(as.matrix(std_vars), Data$pca2, alpha = 1, lambda = exp(seq(-2.2, 0.5, by = 0.01)))
plot_glmnet(r2, title = 'Trace plot for 2nd PC')
dev.off()
library(dplyr)
selected_vars = cbind.data.frame(Data$SUB.DIVISIONAL.hospital.per.10k, Data$Total.Beds.Capacity.per.10k,
Data$Total.ICU.Beds.per.10K, Data$PHC.s.CHC.s.per.10k)
colnames(selected_vars) = c('SubDiv_hospital_per_10K', 'Total_bed_per_10K', 'Total_ICU_per_10K', 'PHC_CHC_per_10K')
normalize = function(x){
return (x - mean(x))/sd(x)
}
std_vars = apply(selected_vars, 2, normalize)
std_vars = data.frame(std_vars)
r1 = lm(Data$pca1 ~ ., data = std_vars)
r2 = lm(Data$pca2 ~ ., data = std_vars)
coeffs1 = r1$coefficients
coeffs2 = r2$coefficients
coeffs1
subdiv_hospital = coeffs1[2] * functional_pca$phi[, 1] + coeffs2[2] * functional_pca$phi[, 2]
total_beds = coeffs1[3] * functional_pca$phi[, 1] + coeffs2[3] * functional_pca$phi[, 2]
total_icu = coeffs1[4] * functional_pca$phi[, 1] + coeffs2[4] * functional_pca$phi[, 2]
phc_chc = coeffs1[5] * functional_pca$phi[, 1] + coeffs2[5] * functional_pca$phi[, 2]
common_time = time_R[[1]]
colnames(Data)
subdiv_hospital = coeffs1[2] * functional_pca$phi[, 1] + coeffs2[2] * functional_pca$phi[, 2]
total_beds = coeffs1[3] * functional_pca$phi[, 1] + coeffs2[3] * functional_pca$phi[, 2]
total_icu = coeffs1[4] * functional_pca$phi[, 1] + coeffs2[4] * functional_pca$phi[, 2]
phc_chc = coeffs1[5] * functional_pca$phi[, 1] + coeffs2[5] * functional_pca$phi[, 2]
common_time = time_R[[1]]
png('Coeff-func-all.png')
plot(common_time, subdiv_hospital, type = 'l', ylim = c(-60, 10), xlab = 'Time', ylab = 'Effect over time')
lines(common_time, total_beds, lty = 1, col = 'red')
lines(common_time, total_icu, lty = 1, col = 'green')
lines(common_time, phc_chc, lty = 1, col = 'blue')
legend('bottomleft', legend=c("Sub-div hospital per 10K", "Total beds per 10K", 'Total ICU beds per 10K', 'PHC-CHC per 10K'),
col=c("black", "red", 'green', 'blue'), lty = 1,  cex=0.8)
dev.off()
qqnorm(functional_pca$xiEst[,2], pch = 1, frame = FALSE)
qqline(functional_pca$xiEst[,2], col = "steelblue", lwd = 2)
